version: '3.8'

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data: {}
  postgres_data: {}
  api_go_pkgs: {}
  api_go_cache: {}
  api_go_mod: {}

services:
  # grafana config
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - ./monitoring/grafana.ini:/etc/grafana/grafana.ini
      - ./monitoring/dashboards:/etc/grafana/dashboards
      - ./monitoring/provisioning:/etc/grafana/provisioning
    ports:
      - 3000:3000
    command:
      - '--config=/etc/grafana/grafana.ini'
    networks:
      - monitoring

  # prometheus config
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - 9090:9090
    networks:
      - monitoring

  api:
    image: golang:latest
    container_name: api
    depends_on:
      chat_db:
        condition: service_healthy
        restart: true
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 8GB
        reservations:
          cpus: '1'
          memory: 8GB
    command: >
      sh -c "cd /chat-1b &&
             go mod download &&
             cd server &&
             go build -x bin/main.go &&
             echo 'built' &&
             ./main"
    volumes:
      - ./:/chat-1b
      - api_go_pkgs:/go
      - api_go_cache:/root/.cache/go-build
      - api_go_mod:/go/pkg/mod
    ports:
      - 8080:8080
      - 8081:8081
    networks:
      - monitoring

  chat_db:
    image: scylladb/scylla
    container_name: chat_db
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 8GB
        reservations:
          cpus: '4.0'
          memory: 8GB
    command: ["--smp", "4", "--reactor-backend=epoll"]
    healthcheck:
      test: ["CMD", "curl", "-X", "GET", "http://localhost:10000/system/uptime_ms"]
      interval: 1m30s
      timeout: 10s
      retries: 2
      start_period: 10s
      start_interval: 5s
    ports:
      - "9042:9042"
      - "10000:10000"
    volumes:
      - postgres_data:/var/lib/scylla
    networks:
      - monitoring

    
