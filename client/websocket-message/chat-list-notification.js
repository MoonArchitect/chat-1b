// automatically generated by the FlatBuffers compiler, do not modify
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
const flatbuffers = window.flatbuffers
export class ChatListNotification {
    constructor() {
        this.bb = null;
        this.bb_pos = 0;
    }
    __init(i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }
    static getRootAsChatListNotification(bb, obj) {
        return (obj || new ChatListNotification()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    static getSizePrefixedRootAsChatListNotification(bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new ChatListNotification()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    chatId(optionalEncoding) {
        const offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    }
    userId(optionalEncoding) {
        const offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    }
    lastActivity() {
        const offset = this.bb.__offset(this.bb_pos, 8);
        return offset ? this.bb.readInt64(this.bb_pos + offset) : BigInt('0');
    }
    static startChatListNotification(builder) {
        builder.startObject(3);
    }
    static addChatId(builder, chatIdOffset) {
        builder.addFieldOffset(0, chatIdOffset, 0);
    }
    static addUserId(builder, userIdOffset) {
        builder.addFieldOffset(1, userIdOffset, 0);
    }
    static addLastActivity(builder, lastActivity) {
        builder.addFieldInt64(2, lastActivity, BigInt('0'));
    }
    static endChatListNotification(builder) {
        const offset = builder.endObject();
        return offset;
    }
    static createChatListNotification(builder, chatIdOffset, userIdOffset, lastActivity) {
        ChatListNotification.startChatListNotification(builder);
        ChatListNotification.addChatId(builder, chatIdOffset);
        ChatListNotification.addUserId(builder, userIdOffset);
        ChatListNotification.addLastActivity(builder, lastActivity);
        return ChatListNotification.endChatListNotification(builder);
    }
}
