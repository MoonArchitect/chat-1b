// automatically generated by the FlatBuffers compiler, do not modify
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
const flatbuffers = window.flatbuffers
export class MessageNotification {
    constructor() {
        this.bb = null;
        this.bb_pos = 0;
    }
    __init(i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }
    static getRootAsMessageNotification(bb, obj) {
        return (obj || new MessageNotification()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    static getSizePrefixedRootAsMessageNotification(bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new MessageNotification()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    chatId(optionalEncoding) {
        const offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    }
    text(optionalEncoding) {
        const offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    }
    userId(optionalEncoding) {
        const offset = this.bb.__offset(this.bb_pos, 8);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    }
    createdAtMicro() {
        const offset = this.bb.__offset(this.bb_pos, 10);
        return offset ? this.bb.readInt64(this.bb_pos + offset) : BigInt('0');
    }
    msgId(optionalEncoding) {
        const offset = this.bb.__offset(this.bb_pos, 12);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    }
    static startMessageNotification(builder) {
        builder.startObject(5);
    }
    static addChatId(builder, chatIdOffset) {
        builder.addFieldOffset(0, chatIdOffset, 0);
    }
    static addText(builder, textOffset) {
        builder.addFieldOffset(1, textOffset, 0);
    }
    static addUserId(builder, userIdOffset) {
        builder.addFieldOffset(2, userIdOffset, 0);
    }
    static addCreatedAtMicro(builder, createdAtMicro) {
        builder.addFieldInt64(3, createdAtMicro, BigInt('0'));
    }
    static addMsgId(builder, msgIdOffset) {
        builder.addFieldOffset(4, msgIdOffset, 0);
    }
    static endMessageNotification(builder) {
        const offset = builder.endObject();
        return offset;
    }
    static createMessageNotification(builder, chatIdOffset, textOffset, userIdOffset, createdAtMicro, msgIdOffset) {
        MessageNotification.startMessageNotification(builder);
        MessageNotification.addChatId(builder, chatIdOffset);
        MessageNotification.addText(builder, textOffset);
        MessageNotification.addUserId(builder, userIdOffset);
        MessageNotification.addCreatedAtMicro(builder, createdAtMicro);
        MessageNotification.addMsgId(builder, msgIdOffset);
        return MessageNotification.endMessageNotification(builder);
    }
}
