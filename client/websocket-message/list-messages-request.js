// automatically generated by the FlatBuffers compiler, do not modify
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
const flatbuffers = window.flatbuffers
export class ListMessagesRequest {
    constructor() {
        this.bb = null;
        this.bb_pos = 0;
    }
    __init(i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }
    static getRootAsListMessagesRequest(bb, obj) {
        return (obj || new ListMessagesRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    static getSizePrefixedRootAsListMessagesRequest(bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new ListMessagesRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    chatId(optionalEncoding) {
        const offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    }
    page() {
        const offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.readUint64(this.bb_pos + offset) : BigInt('0');
    }
    static startListMessagesRequest(builder) {
        builder.startObject(2);
    }
    static addChatId(builder, chatIdOffset) {
        builder.addFieldOffset(0, chatIdOffset, 0);
    }
    static addPage(builder, page) {
        builder.addFieldInt64(1, page, BigInt('0'));
    }
    static endListMessagesRequest(builder) {
        const offset = builder.endObject();
        return offset;
    }
    static createListMessagesRequest(builder, chatIdOffset, page) {
        ListMessagesRequest.startListMessagesRequest(builder);
        ListMessagesRequest.addChatId(builder, chatIdOffset);
        ListMessagesRequest.addPage(builder, page);
        return ListMessagesRequest.endListMessagesRequest(builder);
    }
}
