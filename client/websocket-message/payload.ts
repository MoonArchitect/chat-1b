// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import { AddUserRequest } from '../websocket-message/add-user-request.js';
import { AddUserResponse } from '../websocket-message/add-user-response.js';
import { ChatListNotification } from '../websocket-message/chat-list-notification.js';
import { CreateChatRequest } from '../websocket-message/create-chat-request.js';
import { CreateChatResponse } from '../websocket-message/create-chat-response.js';
import { CreateMessageResponse } from '../websocket-message/create-message-response.js';
import { ListChatsRequest } from '../websocket-message/list-chats-request.js';
import { ListChatsResponse } from '../websocket-message/list-chats-response.js';
import { ListMessagesRequest } from '../websocket-message/list-messages-request.js';
import { ListMessagesResponse } from '../websocket-message/list-messages-response.js';
import { ListUsersRequest } from '../websocket-message/list-users-request.js';
import { ListUsersResponse } from '../websocket-message/list-users-response.js';
import { MessageNotification } from '../websocket-message/message-notification.js';
import { SendMessageRequest } from '../websocket-message/send-message-request.js';
import { UserListNotification } from '../websocket-message/user-list-notification.js';


export enum Payload {
  NONE = 0,
  ChatListNotification = 1,
  UserListNotification = 2,
  MessageNotification = 3,
  AddUserResponse = 4,
  CreateMessageResponse = 5,
  ListUsersResponse = 6,
  CreateChatResponse = 7,
  ListMessagesResponse = 8,
  ListChatsResponse = 9,
  SendMessageRequest = 10,
  ListChatsRequest = 11,
  ListMessagesRequest = 12,
  ListUsersRequest = 13,
  CreateChatRequest = 14,
  AddUserRequest = 15
}

export function unionToPayload(
  type: Payload,
  accessor: (obj:AddUserRequest|AddUserResponse|ChatListNotification|CreateChatRequest|CreateChatResponse|CreateMessageResponse|ListChatsRequest|ListChatsResponse|ListMessagesRequest|ListMessagesResponse|ListUsersRequest|ListUsersResponse|MessageNotification|SendMessageRequest|UserListNotification) => AddUserRequest|AddUserResponse|ChatListNotification|CreateChatRequest|CreateChatResponse|CreateMessageResponse|ListChatsRequest|ListChatsResponse|ListMessagesRequest|ListMessagesResponse|ListUsersRequest|ListUsersResponse|MessageNotification|SendMessageRequest|UserListNotification|null
): AddUserRequest|AddUserResponse|ChatListNotification|CreateChatRequest|CreateChatResponse|CreateMessageResponse|ListChatsRequest|ListChatsResponse|ListMessagesRequest|ListMessagesResponse|ListUsersRequest|ListUsersResponse|MessageNotification|SendMessageRequest|UserListNotification|null {
  switch(Payload[type]) {
    case 'NONE': return null; 
    case 'ChatListNotification': return accessor(new ChatListNotification())! as ChatListNotification;
    case 'UserListNotification': return accessor(new UserListNotification())! as UserListNotification;
    case 'MessageNotification': return accessor(new MessageNotification())! as MessageNotification;
    case 'AddUserResponse': return accessor(new AddUserResponse())! as AddUserResponse;
    case 'CreateMessageResponse': return accessor(new CreateMessageResponse())! as CreateMessageResponse;
    case 'ListUsersResponse': return accessor(new ListUsersResponse())! as ListUsersResponse;
    case 'CreateChatResponse': return accessor(new CreateChatResponse())! as CreateChatResponse;
    case 'ListMessagesResponse': return accessor(new ListMessagesResponse())! as ListMessagesResponse;
    case 'ListChatsResponse': return accessor(new ListChatsResponse())! as ListChatsResponse;
    case 'SendMessageRequest': return accessor(new SendMessageRequest())! as SendMessageRequest;
    case 'ListChatsRequest': return accessor(new ListChatsRequest())! as ListChatsRequest;
    case 'ListMessagesRequest': return accessor(new ListMessagesRequest())! as ListMessagesRequest;
    case 'ListUsersRequest': return accessor(new ListUsersRequest())! as ListUsersRequest;
    case 'CreateChatRequest': return accessor(new CreateChatRequest())! as CreateChatRequest;
    case 'AddUserRequest': return accessor(new AddUserRequest())! as AddUserRequest;
    default: return null;
  }
}

export function unionListToPayload(
  type: Payload, 
  accessor: (index: number, obj:AddUserRequest|AddUserResponse|ChatListNotification|CreateChatRequest|CreateChatResponse|CreateMessageResponse|ListChatsRequest|ListChatsResponse|ListMessagesRequest|ListMessagesResponse|ListUsersRequest|ListUsersResponse|MessageNotification|SendMessageRequest|UserListNotification) => AddUserRequest|AddUserResponse|ChatListNotification|CreateChatRequest|CreateChatResponse|CreateMessageResponse|ListChatsRequest|ListChatsResponse|ListMessagesRequest|ListMessagesResponse|ListUsersRequest|ListUsersResponse|MessageNotification|SendMessageRequest|UserListNotification|null, 
  index: number
): AddUserRequest|AddUserResponse|ChatListNotification|CreateChatRequest|CreateChatResponse|CreateMessageResponse|ListChatsRequest|ListChatsResponse|ListMessagesRequest|ListMessagesResponse|ListUsersRequest|ListUsersResponse|MessageNotification|SendMessageRequest|UserListNotification|null {
  switch(Payload[type]) {
    case 'NONE': return null; 
    case 'ChatListNotification': return accessor(index, new ChatListNotification())! as ChatListNotification;
    case 'UserListNotification': return accessor(index, new UserListNotification())! as UserListNotification;
    case 'MessageNotification': return accessor(index, new MessageNotification())! as MessageNotification;
    case 'AddUserResponse': return accessor(index, new AddUserResponse())! as AddUserResponse;
    case 'CreateMessageResponse': return accessor(index, new CreateMessageResponse())! as CreateMessageResponse;
    case 'ListUsersResponse': return accessor(index, new ListUsersResponse())! as ListUsersResponse;
    case 'CreateChatResponse': return accessor(index, new CreateChatResponse())! as CreateChatResponse;
    case 'ListMessagesResponse': return accessor(index, new ListMessagesResponse())! as ListMessagesResponse;
    case 'ListChatsResponse': return accessor(index, new ListChatsResponse())! as ListChatsResponse;
    case 'SendMessageRequest': return accessor(index, new SendMessageRequest())! as SendMessageRequest;
    case 'ListChatsRequest': return accessor(index, new ListChatsRequest())! as ListChatsRequest;
    case 'ListMessagesRequest': return accessor(index, new ListMessagesRequest())! as ListMessagesRequest;
    case 'ListUsersRequest': return accessor(index, new ListUsersRequest())! as ListUsersRequest;
    case 'CreateChatRequest': return accessor(index, new CreateChatRequest())! as CreateChatRequest;
    case 'AddUserRequest': return accessor(index, new AddUserRequest())! as AddUserRequest;
    default: return null;
  }
}
